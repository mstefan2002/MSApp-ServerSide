class Database:

                /**
                * Construction
                * 
                * @param LogF $log
                * @param LogF $logQuery
                * @param Output $output
                * 
                */
                public function __construct(LogF $log, LogF $logQuery, Output $output)



                /** 
                * SQL UPDATE query
                * 
                * @param string $location         SQL Table name
                * @param array $arr               An array with `column name`=>(
                *                                                                        `value` (only when you get the value from the server side and not client side)[not recommended],
                *                                                                        `?` (you can parse the value to $parms if you get the data from client side and is unsafe)[recommended],
                *                                                                         `null` (the same procedure as ?)
                *                                                              )
                *                                 Example: the array ["tag","name"=>"New Name"]	is equal with ["tag"=>"?","name"=>"New Name"]
                * @param string|null $condition   The condition for UPDATE query
                * @param array|null $parms        An array with values of `$arr` and `$condition`
                *                                 If you have some unsafe data you should use $parms
                *                                 Example code: $location  = "accounts";                              
                *                                               $arr       = array("tag"=>"?","name"=>"New Name");    // you dont give tag a value and you use ? method
                *                                               $condition = "id=?";                                  // you dont give id a value and you use ? method
                *                                               $parms     = array("new_tag",5);                      // In the order of the parameters(first tag then id) we get 2 values
                *                                 Above code is equal with this query(with protection for sql injection):
                *                                 UPDATE `accounts` SET `tag`='new_tag',`name`='New Name' WHERE `id`=5
                * 
                * @return mysqli_result|bool
                * 
                */
                public function update(string $location, array $arr, ?string $condition, ?array $parms) : mysqli_result|bool




                /** 
                * SQL INSERT query
                * 
                * @param string $location         SQL Table name
                * @param array $arr               An array with `column name`=>(
                *                                                                        `value` (only when you get the value from the server side and not client side)[not recommended],
                *                                                                        `?` (you can parse the value to $parms if you get the data from client side and is unsafe)[recommended],
                *                                                                         `null` (the same procedure as ?)
                *                                                              )
                * @param array|null $parms        An array with values of `$arr`
                *                                 If you have some unsafe data you should use $parms
                *                                 Example code: $location  = "accounts";                              
                *                                               $arr       = array("tag"=>"?","name"=>"New Name");    // you dont give tag a value and you use ? method
                *                                               $parms     = array("new_tag");
                *                                 Above code is equal with this query(with protection for sql injection):
                *                                 INSERT INTO `accounts` (`tag`,`name`) VALUES('new_tag','New Name')
                *
                * @return mysqli_result|bool
                * 
                */
                public function insert(string $location, array $arr, ?array $parms) : mysqli_result|bool




                /** 
                * SQL SELECT query
                * 
                * 
                * @param string|null $select       Selected columns to get or `null` to be replaced with `*`
                * @param string $location          SQL Table name
                * @param string|null $condition    The condition for SELECT query
                * @param string|null $other        Other parms like order/join/etc
                * @param array|null $parms         An array with values of `$select` , `$condition` and `$other`
                *                                  If you have some unsafe data you should use $parms
                *                                  Example code: $select    = null;                                    // will be replaced with * = everything
                *                                                $location  = "accounts";                              
                *                                                $condition = "id=?";                                  // you dont give id a value and you use ? method
                *                                                $other     = null;
                *                                                $parms     = array(5);
                *                                  Above code is equal with this query(with protection for sql injection):
                *                                  SELECT * FROM `accounts` WHERE `id`='5'
                * 
                * @return mysqli_result|bool
                * 
                */
                public function select(?string $select,string $location,?string $condition,?string $other,?array $parms) : mysqli_result|bool


                /**
                * SQL DELETE query
                *
                * 
                * @param string $location          SQL Table name
                * @param string|null $condition    The condition for DELETE query
                * @param array|null $parms         An array with values of `$condition`
                *                                  If you have some unsafe data you should use $parms
                *                                  Example code: $location  = "accounts";                              
                *                                                $condition = "id=?";              // you dont give id a value and you use ? method
                *                                                $parms     = array(5);
                *                                  Above code is equal with this query(with protection for sql injection):
                *                                  DELETE FROM `accounts` WHERE `id`='5'
                * 
                * @return mysqli_result|bool
                * 
                */
                public function delete(string $location, ?string $condition, ?array $parms) : mysqli_result|bool


                /**
                * Execute a SQL Query
                *
                * @param string $query
                * 
                * @return mysqli_result|bool
                * 
                */
                public function query(string $query) : mysqli_result|bool



                /**
                * Execute a SQL Query with prepare->bind_param
                *
                * @param string $query
                * @param array $parms
                * 
                * @return mysqli_result|bool
                * 
                */
                public function cQuery(string $query, array $parms) : mysqli_result|bool



                /**
                * Get the result
                *
                * @return mysqli_result|false
                * 
                */
                public function get_result(): mysqli_result|false


                /**
                * Get the last id from insert
                *
                * @return int|string
                * 
                */
                public function lastID() : int|string